<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which
         assemblies to include from solution and project documentation
         sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{638dcc33-bfe3-422c-a973-483e24e7cb74}</ProjectGuid>
    <SHFBSchemaVersion>1.9.5.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual
         Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <DocumentationSources>
      <DocumentationSource sourceFile="..\bin\Debug\Zyan.Communication.dll" xmlns="" />
      <DocumentationSource sourceFile="..\bin\Debug\Zyan.Communication.xml" xmlns="" />
    </DocumentationSources>
    <HelpFileFormat>Website</HelpFileFormat>
    <PresentationStyle>vs2010</PresentationStyle>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="(global)" isDocumented="False" />
<NamespaceSummaryItem name="Zyan.Communication" isDocumented="True">Zyan is a framework that simplifies development of distributed applications. With Zyan you can publish every .NET class for remote access over the network. Zyan is highly customizable and provides you with tools to build modular and plugable distributed applications.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.ChannelSinks.Compression" isDocumented="True">This namespace contains compression channel sinks. Compression sinks enable transparent compression for the network traffic.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.ChannelSinks.Counter" isDocumented="True">This namespace contains counter sinks used to gather network statistics.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.ChannelSinks.Encryption" isDocumented="True">This namespace contains encryption channel sinks. Encryption sinks enable transparent encryption for the network traffic.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Composition" isDocumented="True">This namespace contains MEF integration classes. It is only available for the .NET Framework 4.0 and above.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Delegates" isDocumented="True">This namespace contains utility classes for delegates, events and dynamic wires for EBC programming.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Notification" isDocumented="True">This namespace is obsolete.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Protocols" isDocumented="True">This namespace contains base protocol setup classes. Protocol setup classes are used to tune Zyan transport channels.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Protocols.Http" isDocumented="True">This namespace contains classes related to HTTP-based network communication.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Protocols.Ipc" isDocumented="True">This namespace contains classes related to interprocess communication.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Protocols.Null" isDocumented="True">This namespace contains classes related to local (inside the same AppDomain) communication. The primary use for local protocols it unit testing and profiling.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Protocols.Tcp" isDocumented="True">This namespace contains classes related to TCP-based network communication.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Protocols.Tcp.DuplexChannel" isDocumented="True">This namespace contains classes related to TCP-based duplex network communication.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Security" isDocumented="True">This namespace contains classes related to authentication and security.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Security.Exceptions" isDocumented="True">This namespace contains exception classes related to authentication and security.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.SessionMgmt" isDocumented="True">This namespace contains classes related to the session management.</NamespaceSummaryItem>
<NamespaceSummaryItem name="Zyan.Communication.Toolbox" isDocumented="True">This namespace contains various utility classes.</NamespaceSummaryItem></NamespaceSummaries>
    <ProjectSummary>Zyan is a framework that simplifies development of distributed applications. With Zyan you can publish every .NET class for remote access over the network. Zyan is highly customizable and provides you with tools to build modular and plugable distributed applications.</ProjectSummary>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in
       order for Visual Studio to perform the build.  The others are optional
       common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>
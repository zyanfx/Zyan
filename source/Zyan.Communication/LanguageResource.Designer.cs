//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zyan.Communication {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LanguageResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LanguageResource() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Zyan.Communication.LanguageResource", typeof(LanguageResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Multiple module controlers per module are not allowed. ähnelt.
        /// </summary>
        internal static string ApplicationException_MultipleModuleControlersNotAllowed {
            get {
                return ResourceManager.GetString("ApplicationException_MultipleModuleControlersNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Notification service is not running on the host. ähnelt.
        /// </summary>
        internal static string ApplicationException_NotificationServiceNotRunning {
            get {
                return ResourceManager.GetString("ApplicationException_NotificationServiceNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component host name missing. ähnelt.
        /// </summary>
        internal static string ArgumentException_ComponentHostNameMissing {
            get {
                return ResourceManager.GetString("ArgumentException_ComponentHostNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty session ID is not allowed. ähnelt.
        /// </summary>
        internal static string ArgumentException_EmptySessionIDIsNotAllowed {
            get {
                return ResourceManager.GetString("ArgumentException_EmptySessionIDIsNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delegate to factory method missing. ähnelt.
        /// </summary>
        internal static string ArgumentException_FactoryMethodDelegateMissing {
            get {
                return ResourceManager.GetString("ArgumentException_FactoryMethodDelegateMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Interface name missing. ähnelt.
        /// </summary>
        internal static string ArgumentException_InterfaceNameMissing {
            get {
                return ResourceManager.GetString("ArgumentException_InterfaceNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid configuration setting: {0} ähnelt.
        /// </summary>
        internal static string ArgumentException_InvalidConfigSetting {
            get {
                return ResourceManager.GetString("ArgumentException_InvalidConfigSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting &apos;connectionAgeLimit&apos; must be 0 or greater. ähnelt.
        /// </summary>
        internal static string ArgumentException_InvalidConnectionAgeLimitSetting {
            get {
                return ResourceManager.GetString("ArgumentException_InvalidConnectionAgeLimitSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setting &apos;sweepFrequency&apos; must be 0 or greater. ähnelt.
        /// </summary>
        internal static string ArgumentException_InvalidSweepFrequencySetting {
            get {
                return ResourceManager.GetString("ArgumentException_InvalidSweepFrequencySetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter &apos;maxRetries&apos; must be 1 or greater. ähnelt.
        /// </summary>
        internal static string ArgumentException_MaxAttempts {
            get {
                return ResourceManager.GetString("ArgumentException_MaxAttempts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method name missing. ähnelt.
        /// </summary>
        internal static string ArgumentException_MethodNameMissing {
            get {
                return ResourceManager.GetString("ArgumentException_MethodNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outpit pin property name missing. ähnelt.
        /// </summary>
        internal static string ArgumentException_OutPutPinNameMissing {
            get {
                return ResourceManager.GetString("ArgumentException_OutPutPinNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server URL missing. ähnelt.
        /// </summary>
        internal static string ArgumentException_ServerUrlMissing {
            get {
                return ResourceManager.GetString("ArgumentException_ServerUrlMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The provided implementation type is not a class. ähnelt.
        /// </summary>
        internal static string ArgumentException_TypeIsNotAClass {
            get {
                return ResourceManager.GetString("ArgumentException_TypeIsNotAClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The provided interface type is not a interface. ähnelt.
        /// </summary>
        internal static string ArgumentException_TypeIsNotAInterface {
            get {
                return ResourceManager.GetString("ArgumentException_TypeIsNotAInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The HTTP port must be set within the range 0-65535 liegen. ähnelt.
        /// </summary>
        internal static string ArgumentOutOfRangeException_InvalidHttpPortRange {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_InvalidHttpPortRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The TCP port must be set within the range 0-65535 liegen. ähnelt.
        /// </summary>
        internal static string ArgumentOutOfRangeException_InvalidTcpPortRange {
            get {
                return ResourceManager.GetString("ArgumentOutOfRangeException_InvalidTcpPortRange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Client connection info missing. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_ClientConnectionInfoMissing {
            get {
                return ResourceManager.GetString("CryptoRemotingException_ClientConnectionInfoMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid client request: {0}. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_InvalidClientRequest {
            get {
                return ResourceManager.GetString("CryptoRemotingException_InvalidClientRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid secure transaction ID. May be caused by timeout. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_InvalidTransactionID {
            get {
                return ResourceManager.GetString("CryptoRemotingException_InvalidTransactionID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Initialization Vector from server missing. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_IVMissing {
            get {
                return ResourceManager.GetString("CryptoRemotingException_IVMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public key changed since the message was encrypted. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_KeyChanged {
            get {
                return ResourceManager.GetString("CryptoRemotingException_KeyChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public key missing. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_PublicKeyNotFound {
            get {
                return ResourceManager.GetString("CryptoRemotingException_PublicKeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Server requires encrypted connection for this client. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_ServerRequiresEncryption {
            get {
                return ResourceManager.GetString("CryptoRemotingException_ServerRequiresEncryption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No public key transmitted. ähnelt.
        /// </summary>
        internal static string CryptoRemotingException_SharedKeyMissing {
            get {
                return ResourceManager.GetString("CryptoRemotingException_SharedKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Es wurden keine Kontextinformationen übertragen. ähnelt.
        /// </summary>
        internal static string SecurityException_ContextInfoMissing {
            get {
                return ResourceManager.GetString("SecurityException_ContextInfoMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Credentials missing. ähnelt.
        /// </summary>
        internal static string SecurityException_CredentialsMissing {
            get {
                return ResourceManager.GetString("SecurityException_CredentialsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password missing. ähnelt.
        /// </summary>
        internal static string SecurityException_PasswordMissing {
            get {
                return ResourceManager.GetString("SecurityException_PasswordMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User name missing. ähnelt.
        /// </summary>
        internal static string SecurityException_UserNameMissing {
            get {
                return ResourceManager.GetString("SecurityException_UserNameMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Windows security token credential missing. ähnelt.
        /// </summary>
        internal static string SecurityException_WindowsTokenMissing {
            get {
                return ResourceManager.GetString("SecurityException_WindowsTokenMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User is not authenticated by operating system. ähnelt.
        /// </summary>
        internal static string UserNotAuthenicatedByWindows {
            get {
                return ResourceManager.GetString("UserNotAuthenicatedByWindows", resourceCulture);
            }
        }
    }
}
